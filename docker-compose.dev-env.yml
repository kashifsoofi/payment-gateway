version: '3.7'

networks:
  default:
  localstack-net:
    external: true
    
services:
  seq:
    image: datalust/seq:2023.1
    ports:
      - "8080:80"
      - "5341:5341"
    volumes:
      - /datadrive:/data
    environment:
      - ACCEPT_EULA=Y
      - BASE_URI=https://seq.dptsprotrans.com

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.72.0
    deploy:
      resources:
        limits:
          memory: 100M
    command: [ "--config=/etc/config.yml", "--config=/etc/config-extras.yml" ]
    volumes:
      - ./otel-collector/config.yml:/etc/config.yml
      - ./otel-collector/config-extras.yml:/etc/config-extras.yml
    ports:
      - "4317"          # OTLP over gRPC receiver
      - "4318:4318"     # OTLP over HTTP receiver
      - "9464"          # Prometheus exporter
      - "8888"          # metrics endpoint
    
  prometheus:
    image: prom/prometheus:v2.37.6
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus-host.yml:/etc/prometheus/prometheus.yml:ro
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:9090/
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s

  grafana:
    image: grafana/grafana-oss:9.3.6
    ports:
      - 3000:3000
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
        prometheus:
            condition: service_healthy
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:3000/
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s

  payments.db:
    image: mysql:5.7
    ports:
      - "33060:3306"
    volumes:
      - paymentsappdbdata:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=defaultdb
      - MYSQL_ROOT_PASSWORD=Password123
  
  payments.db.migrations:
    depends_on:
      - payments.db
    image: payments.db.migrations
    build:
      context: ./db/
      dockerfile: Dockerfile
    command: -cs "server=payments.db;database=defaultdb;uid=root;password=Password123;SslMode=None;"

  localstack-setup:
    build:
      context: ./localstack-setup
    networks:
      - localstack-net
    environment:
      - "AWS_SECRET_ACCESS_KEY=DUMMY_KEY"
      - "AWS_ACCESS_KEY_ID=DUMMY_KEY"

volumes:
  paymentsappdbdata:
  